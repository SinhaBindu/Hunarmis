@using Hunarmis.Manager
@{
    ViewBag.Title = "Dashboard";

    var dtGraph1 = SPManager.SP_Dashboard1_Graphs(1, 0);

}
@using Hunarmis.Helpers

<div class="body-wrapper">
    <div class="container-fluid">
        <div class="row">
            <div class="col-xs-12 col-md-12">
                <div class="font-weight-medium shadow-none position-relative overflow-hidden mb-7">
                    <div class="card-body px-0">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <h4 class="font-weight-medium fs-14 mb-0">Section1 </h4>
                            </div>
                            <div>
                                <div class="d-sm-flex d-none gap-3 no-block justify-content-end align-items-center">
                                    <div class="d-flex gap-2">
                                        @Html.DropDownList("ddlCourse", CommonModel.GetCourses(), "All", htmlAttributes: new { @class = "form-control" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-6 col-md-6">
                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title">Course</h4>
                        <figure class="highcharts-figure m-0">
                            <div id="parent-container">
                                <div id="containerCourse_Course"></div>
                            </div>
                        </figure>
                    </div>
                </div>
            </div>
            <div class="col-lg-6 col-md-6">
                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title">Location</h4>
                        <figure class="highcharts-figure">
                            <div id="parent-container">
                                <div id="containerCourse_Location"></div>
                            </div>
                        </figure>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-6 col-md-6">
                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title">Gender</h4>
                        <figure class="highcharts-figure">
                            <div id="parent-container">
                                <div id="containerCourse_Gender"></div>
                            </div>
                        </figure>
                    </div>
                </div>
            </div>
            <div class="col-lg-6 col-md-6">
                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title">Industry</h4>
                        <figure class="highcharts-figure">
                            <div id="parent-container">
                                <div id="containerCourse_Industry"></div>
                            </div>
                        </figure>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-xs-12 col-md-12">
                <div class="font-weight-medium shadow-none position-relative overflow-hidden mb-7">
                    <div class="card-body px-0">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <h4 class="font-weight-medium fs-14 mb-0">Industry</h4>
                            </div>
                            <div>
                                <div class="d-sm-flex d-none gap-3 no-block justify-content-end align-items-center">
                                    <div class="d-flex gap-2">
                                        @Html.DropDownList("ddlIndustry", CommonModel.GetIndustry(1), "All", htmlAttributes: new { @class = "form-control" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-6 col-md-6">
                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title">Industry</h4>
                        <figure class="highcharts-figure">
                            <div id="parent-container">
                                <div id="containerIndustry_Industry"></div>
                            </div>
                        </figure>
                    </div>
                </div>
            </div>
            <div class="col-lg-6 col-md-6">
                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title">Course</h4>
                        <figure class="highcharts-figure">
                            <div id="parent-container">
                                <div id="containerIndustry_Course"></div>
                            </div>
                        </figure>
                    </div>
                </div>
            </div>
            <div class="col-lg-6 col-md-6">
                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title">Industry</h4>
                        <figure class="highcharts-figure">
                            <div id="parent-container">
                                <div id="containerIndustry_Location"></div>
                            </div>
                        </figure>
                    </div>
                </div>
            </div>
            <div class="col-lg-6 col-md-6">
                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title">Location</h4>
                        <figure class="highcharts-figure">
                            <div id="parent-container">
                                <div id="containerIndustry_Gender"></div>
                            </div>
                        </figure>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="https://code.highcharts.com/highcharts.js"></script>
<script>
    $('.count').each(function () {
        $(this).prop('Counter', 0).animate({
            Counter: $(this).text()
        }, {
            duration: 4000,
            easing: 'swing',
            step: function (now) {
                $(this).text(Math.ceil(now));
            }
        });
    });

    $(document).ready(function () {
        $('.tab-btn').on('click', function () {
            $('.tab-btn').removeClass('act');
            $(this).addClass('act');
        });

        $("#ddlCourse").change(function (e) {
            section_Course($(this).val());
        });

        $("#ddlIndustry").change(function (e) {
            $.ajax({
                url: '@Url.Action("GetDashboard1", "home")',
                data: { mode: 2, Id: $(this).val() },
                async: false,
                success: function (result) {
                    console.log(result);
                    if (result.IsSuccess) {

                    }
                }
            });
        });


        section_Course(0);
        section_Industry(0);
    });

    function escapeRegExp(str) {
        return str.replace(/[.*+?^${}()|[\]\\]/g, '\\$&'); // $& means the whole matched string
    }

    function replaceAll(str, find, replace) {
        return str.replace(new RegExp(escapeRegExp(find), 'g'), replace);
    }

    function section_Course(id) {
        $.ajax({
            url: '@Url.Action("GetDashboard1", "home")',
            data: { mode: 1, Id: id },
            async: false,
            success: function (result) {
                console.log(result);
                if (result.IsSuccess) {
                    var data = JSON.parse(result.Data)[0];
                    courseGraph(JSON.parse(data.CourseJsonData), 'containerCourse_Course');
                    locationGraph(JSON.parse(data.LocationJsonData), 'containerCourse_Location');
                    genderGraph(JSON.parse(data.GenderJsonData), 'containerCourse_Gender');
                    industryGraph(JSON.parse(data.IndustryJsonData), 'containerCourse_Industry');
                }
            }
        });
    }

    function section_Industry(id) {
        $.ajax({
            url: '@Url.Action("GetDashboard1", "home")',
            data: { mode: 2, Id: id },
            async: false,
            success: function (result) {
                console.log(result);
                if (result.IsSuccess) {
                    var data = JSON.parse(result.Data)[0];
                    courseGraph(JSON.parse(data.CourseJsonData), 'containerIndustry_Course');
                    locationGraph(JSON.parse(data.LocationJsonData), 'containerIndustry_Location');
                    genderGraph(JSON.parse(data.GenderJsonData), 'containerIndustry_Gender');
                    industryGraph(JSON.parse(data.IndustryJsonData), 'containerIndustry_Industry');
                }
            }
        });
    }

    var linearGradient = { x1: 0, x2: 0, y1: 0, y2: 1 };
    var colors = [{
        linearGradient: linearGradient,
        stops: [[0, '#ff3399'], [1, '#3366AA']]
    },
    {
        linearGradient: linearGradient,
        stops: [[0, '#FFD86F'], [1, '#FC6262']]
    },
    {
        linearGradient: linearGradient,
        stops: [[0, '#ff6ec4'], [1, '#7873f5']]
    },
    {
        linearGradient: linearGradient,
        stops: [[0, '#45cafc'], [1, '#303f9f']]
        }];

    function courseGraph(jsonData, selector) {
        console.log(jsonData);
        var data = [];
        for (var i = 0; i < jsonData.length; i++) {
            data.push({
                name: jsonData[i].CourseName,
                //y: jsonData[i].Percentage,
                //value: jsonData[i].Total
                y: jsonData[i].Total
            });
        }

        Highcharts.chart(selector, {
            chart: {
                type: 'column',
                backgroundColor: 'rgba(0,0,0,0)'
            },
            title: {
                text: 'Course',
                align: 'left',
                style: {
                    display: 'none'
                }
            },
            credits: {
                enabled: false
            },
            //subtitle: {
            //    text: 'Click the slices to view versions. Source: <a href="http://statcounter.com" target="_blank">statcounter.com</a>',
            //    align: 'left'
            //},

            accessibility: {
                announceNewData: {
                    enabled: true
                },
                point: {
                    valueSuffix: '%'
                }
            },

            plotOptions: {
                series: {
                    borderRadius: 5,
                    dataLabels: [{
                        enabled: true,
                        distance: 15,
                        format: '{point.y}'
                    }, {
                        enabled: true,
                        distance: '-30%',
                        filter: {
                            property: 'percentage',
                            operator: '>',
                            value: 5
                        },
                        format: '{point.y:.1f}',
                        style: {
                            fontSize: '0.9em',
                            textOutline: 'none'
                        }
                    }]
                }
            },

            tooltip: {
                headerFormat: '<span style="font-size:11px">{series.name}</span><br>',
                pointFormat: '<span style="color:{point.color}">{point.name}</span>: ' +
                    '<b>{point.y:.2f}</b><br/>'
            },
            //colors: ['#ea599f', '#6ec9ee', '#8a80bc','#f7c9de'],
            colors: colors,
            xAxis: {
                categories: data.map(x => x.name)
            },
            series: [{
                name: 'Courses',
                data: data
            }]
        });

    }

    function locationGraph(jsonData, selector) {
        console.log(jsonData);
        var data = [];
        for (var i = 0; i < jsonData.length; i++) {
            data.push({
                name: jsonData[i].DistrictName,
                y: jsonData[i].Total,
                value: jsonData[i].Percentage

            });
        }

        Highcharts.chart(selector, {
            chart: {
                type: 'column',
                backgroundColor: 'rgba(0,0,0,0)'
            },
            title: {
                align: 'left',
                text: 'Location',
                style: {
                    display: 'none'
                }
            },
            //subtitle: {
            //    align: 'left',
            //    text: 'Click the columns to view versions. Source: <a href="http://statcounter.com" target="_blank">statcounter.com</a>'
            //},
            accessibility: {
                announceNewData: {
                    enabled: true
                }
            },
            credits: {
                enabled: false
            },
            legend: {
                enabled: false
            },
            plotOptions: {
                series: {
                    borderWidth: 0,
                    dataLabels: {
                        enabled: true,
                        format: '{point.y:.1f}'
                    }
                }
            },
            tooltip: {
                headerFormat: '<span style="font-size:11px">{series.name}</span><br>',
                pointFormat: '<span style="color:{point.color}">{point.name}</span>: ' +
                    '<b>{point.y:.2f}</b><br/>'
            },
            colors: colors,
            xAxis: {
                title: {
                    text: 'Locations'
                },
                categories: data.map(x => x.name)
            },
            yAxis: {
                title: {
                    text: 'Average Salary'
                }
            },
            series: [{
                name: 'Locations',
                data: data
            }]
        });
    }

    function genderGraph(jsonData, selector) {
        console.log(jsonData);
        var data = [];
        for (var i = 0; i < jsonData.length; i++) {
            data.push([jsonData[i].Gender, jsonData[i].Total, jsonData[i].Percentage]);
        }

        chart = Highcharts.chart(selector, {
            chart: {
                type: 'column',
                backgroundColor: 'rgba(0,0,0,0)'
            },
            title: {
                text: 'Gender',
                align: 'center',
                style: {
                    display: 'none'
                }
            },
            credits: {
                enabled: false
            },
            //subtitle: {
            //    useHTML: true,
            //    text: getSubtitle(),
            //    floating: true,
            //    verticalAlign: 'middle',
            //    y: 30
            //},
            legend: {
                enabled: true
            },
            //tooltip: {
            //    valueDecimals: 0,
            //    valueSuffix: ' Participaints'
            //},
            tooltip: {
                headerFormat: '<span style="font-size:11px">{series.name}</span><br>',
                pointFormat: '<span style="color:{point.color}">{point.name}</span>: ' +
                    '<b>{point.y:.2f}</b><br/>'
            },
            plotOptions: {
                series: {
                    borderWidth: 0,
                    colorByPoint: true,
                    type: 'pie',
                    size: '100%',
                    innerSize: '50%',
                    dataLabels: {
                        enabled: true,
                        crop: false,
                        distance: '-10%',
                        style: {
                            fontWeight: 'bold',
                            fontSize: '16px'
                        },
                        connectorWidth: 0
                    }
                }
            },
            colors: colors,
            xAxis: {
                title: {
                    text: 'Gender'
                },
                categories: data.map(x => x.name)
            },
            yAxis: {
                title: {
                    text: 'Average Salary'
                }
            },
            series: [{
                name: 'Gender',
                data: data
            }]
        });
    }

    function industryGraph(jsonData, selector) {
        console.log(jsonData);
        var data = [];
        for (var i = 0; i < jsonData.length; i++) {
            data.push({
                name: jsonData[i].IndustryName,
                y: jsonData[i].Total,
            });
        }

        Highcharts.chart(selector, {
            chart: {
                type: 'column',
                backgroundColor: 'rgba(0,0,0,0)'
            },
            title: {
                align: 'left',
                text: 'Industry',
                style: {
                    display: 'none'
                }
            },
            //subtitle: {
            //    align: 'left',
            //    text: 'Click the columns to view versions. Source: <a href="http://statcounter.com" target="_blank">statcounter.com</a>'
            //},
            accessibility: {
                announceNewData: {
                    enabled: true
                }
            },
            credits: {
                enabled: false
            },
            legend: {
                enabled: false
            },
            plotOptions: {
                series: {
                    borderWidth: 0,
                    dataLabels: {
                        enabled: true,
                        format: '{point.y:.1f}'
                    }
                }
            },
            tooltip: {
                headerFormat: '<span style="font-size:11px">{series.name}</span><br>',
                pointFormat: '<span style="color:{point.color}">{point.name}</span>: ' +
                    '<b>{point.y:.2f}</b> of total<br/>'
            },
            colors: colors,
            xAxis: {
                title: {
                    text: 'Industries'
                },
                categories: data.map(x => x.name)
            },
            yAxis: {
                title: {
                    text: 'Average Salary'
                }
            },
            series: [{
                name: 'Industries',
                data: data
            }]
        });
    }

</script>
